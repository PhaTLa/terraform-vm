{
  "version": 4,
  "terraform_version": "1.10.3",
  "serial": 134,
  "lineage": "0a1faf44-5b8f-fa5b-64cf-840c5c755937",
  "outputs": {
    "created_ip_address": {
      "value": "Master: 192.168.122.102 \n Slaves: 192.168.122.81, 192.168.122.27",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.hadoop_master",
      "mode": "data",
      "type": "template_file",
      "name": "network_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f9fffade94480c5e803cd15c14b63e65b5cd935e5d408f1bd31edf34c8affe3d",
            "rendered": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "template": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.hadoop_master",
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "b49b961ae988cc14b7a013c8718306150ceb1d019f42b37e598a7ada8ebfcc63",
            "rendered": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-master-0\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "template": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: ${vm_name}-${count_index}\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "vars": {
              "count_index": "0",
              "vm_name": "hadoop-master"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.hadoop_master",
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "commoninit",
      "provider": "module.hadoop_master.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/u01/data/virt-u01/commoninit-hadoop-master-0.iso;2c0e5b4d-1196-4a0c-a480-a9192150ea0a",
            "meta_data": "",
            "name": "commoninit-hadoop-master-0.iso",
            "network_config": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "pool": "virt-u01",
            "user_data": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-master-0\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_master.data.template_file.network_config",
            "module.hadoop_master.data.template_file.user_data"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_master",
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "domain-ubuntu",
      "provider": "module.hadoop_master.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/u01/data/virt-u01/commoninit-hadoop-master-0.iso;2c0e5b4d-1196-4a0c-a480-a9192150ea0a",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              },
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "1",
                "target_type": "virtio",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/u01/data/virt-u01/hadoop-clt-master-0-disk",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [],
            "id": "bd394dae-b5d1-4282-afd1-f61b7033488a",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "hadoop-master-0",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.102"
                ],
                "bridge": "",
                "hostname": "hadoop-master",
                "mac": "52:54:00:A2:83:7B",
                "macvtap": "",
                "network_id": "b7189a86-a35e-44d9-80e9-3dff3fb23aff",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.hadoop_master.data.template_file.network_config",
            "module.hadoop_master.data.template_file.user_data",
            "module.hadoop_master.libvirt_cloudinit_disk.commoninit",
            "module.hadoop_master.libvirt_volume.disk_volume",
            "module.hadoop_master.libvirt_volume.ubuntu-qcow2"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_master",
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "disk_volume",
      "provider": "module.hadoop_master.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/u01/data/virt-u01/hadoop-clt-master-base",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/u01/data/virt-u01/hadoop-clt-master-0-disk",
            "name": "hadoop-clt-master-0-disk",
            "pool": "virt-u01",
            "size": 53687091200,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_master.libvirt_volume.ubuntu-qcow2"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_master",
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "ubuntu-qcow2",
      "provider": "module.hadoop_master.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/u01/data/virt-u01/hadoop-clt-master-base",
            "name": "hadoop-clt-master-base",
            "pool": "virt-u01",
            "size": 2361393152,
            "source": "/u01/os_images/jammy-server-cloudimg-amd64.img",
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "data",
      "type": "template_file",
      "name": "network_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f9fffade94480c5e803cd15c14b63e65b5cd935e5d408f1bd31edf34c8affe3d",
            "rendered": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "template": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "456658180ed78004f2627e1bcef85bbecc3703f92687f6ed335dca40020cb5b5",
            "rendered": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-slaves-0\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "template": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: ${vm_name}-${count_index}\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "vars": {
              "count_index": "0",
              "vm_name": "hadoop-slaves"
            }
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ea7bdddaf046acc361517acae28cef5bc9a9641d173d0c42361807a96a96773a",
            "rendered": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-slaves-1\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "template": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: ${vm_name}-${count_index}\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf",
            "vars": {
              "count_index": "1",
              "vm_name": "hadoop-slaves"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "commoninit",
      "provider": "module.hadoop_slaves.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/u01/data/virt-u01/commoninit-hadoop-slaves-0.iso;9e0c83c8-308a-48fc-a6bb-db110f84f6c7",
            "meta_data": "",
            "name": "commoninit-hadoop-slaves-0.iso",
            "network_config": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "pool": "virt-u01",
            "user_data": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-slaves-0\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_slaves.data.template_file.network_config",
            "module.hadoop_slaves.data.template_file.user_data"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/u01/data/virt-u01/commoninit-hadoop-slaves-1.iso;cbbe0ee4-03d5-4526-b7ac-dd99bee9487e",
            "meta_data": "",
            "name": "commoninit-hadoop-slaves-1.iso",
            "network_config": "version: 2\nethernets:\n  eth0:\n    match:\n      name: en*\n    dhcp4: true\n    optional: true\n    gateway4: 192.168.122.1\n    nameservers: \n      addresses: [192.168.122.1]",
            "pool": "virt-u01",
            "user_data": "#cloud-config\n# Add groups to the system\n# The following example adds the 'admingroup' group with members 'root' and 'sys'\n# and the empty group cloud-users.\ngroups:\n  - admingroup: [root,sys,user01]\n  - cloud-users\n\n# Add users to the system. Users are added after groups are added.\n# Note: Most of these configuration options will not be honored if the user\n#       already exists. Following options are the exceptions and they are\n#       applicable on already-existing users:\n#       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',\n#         'ssh_authorized_keys', 'ssh_redirect_user'.\nusers:\n  - default\n  - name: user01\n    gecos: user01\n    shell: /bin/bash\n    primary_group: user01\n    groups: users, admingroup\n    lock_passwd: false\n    passwd: $6$xev1Hc0uWt9yH756$rE2bEMCoCrCaergoHWqEyArFNRLC2e3oDYdGY0/7o5Yi.Xrxbr/k4uYv5CqStAmPWhZnTKncCjdpSl2dJPpEZ0\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC3VgBN3LdE3dMEJbrq9+V3GwvN1eKHRoa8pXY0u6w2b8+5w/vgA9r5zfXVXqG85kny7FKE5zFj9eR7da8tn3nuRoTy08U5pOdpq5nHadVZ1iOU0rMME8ytQAcWhzERBaU8N/3G2v3PxCl6TicFQ82Y164/VuWTfO6Kvv6u91ID8HSKlCXxLoitlD0nBbblkfBO1Tf6abDBc1b2Er2y4nzPoOdzuCxWiAZ59F14IaDfrnYJbRrJFPDxXYs9csk9l25MKycLKJGkeJIg2WyLjqKPSm4ezVlU1wT6AEGynf6r7MYPv5h1XFgNkqD/l5B+QVueek9s5zUqOMNCVb7/4wAwzCregr6dnqo9J+FQff2fpXAafEywlQvv5CksrwCDXnHpe8K8MLrucVsz59mKnGPINJbjwaro+qsKSRlNlJPMx807b+2lIeNEob9MDTmHVwtKsfXwbNXXj/Vk8JVLMwrJNYIrKgtmmlD51l7nf8sItEHnzgR8uNNLU0WcRQxGe8= lampt@lamptz420\n#   - name: barfoo\n#     gecos: Bar B. Foo\n#     sudo: ALL=(ALL) NOPASSWD:ALL\n#     groups: users, admingroup\n#     lock_passwd: true\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - name: testuser\n#     gecos: Mr. Test\n#     homedir: /local/testdir\n#     sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#   - name: cloudy\n#     gecos: Magic Cloud App Daemon User\n#     inactive: '5'\n#     system: true\n#   - name: fizzbuzz\n#     sudo: false\n#     shell: /bin/bash\n#     ssh_authorized_keys:\n#       - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSL7uWGj8cgWyIOaspgKdVy0cKJ+UTjfv7jBOjG2H/GN8bJVXy72XAvnhM0dUM+CCs8FOf0YlPX+Frvz2hKInrmRhZVwRSL129PasD12MlI3l44u6IwS1o/W86Q+tkQYEljtqDOo0a+cOsaZkvUNzUyEXUwz/lmYa6G4hMKZH4NBj7nbAAF96wsMCoyNwbWryBnDYUr6wMbjRR1J9Pw7Xh7WRC73wy4Va2YuOgbD3V/5ZrFPLbWZW/7TFXVrql04QVbyei4aiFR5n//GvoqwQDNe58LmbzX/xvxyKJYdny2zXmdAhMxbrpFQsfpkJ9E/H5w0yOdSvnWbUoG5xNGoOB csmith@fringe\n#   - snapuser: joe@joeuser.io\n#   - name: nosshlogins\n#     ssh_redirect_user: true\n\n# Valid Values:\n#   name: The user's login name\n#   expiredate: Date on which the user's account will be disabled.\n#   gecos: The user name's real name, i.e. \"Bob B. Smith\"\n#   homedir: Optional. Set to the local path you want to use. Defaults to\n#           /home/\u003cusername\u003e\n#   primary_group: define the primary group. Defaults to a new group created\n#           named after the user.\n#   groups:  Optional. Additional groups to add the user to. Defaults to none\n#   selinux_user:  Optional. The SELinux user for the user's login, such as\n#           \"staff_u\". When this is omitted the system will select the default\n#           SELinux user.\n#   lock_passwd: Defaults to true. Lock the password to disable password login\n#   inactive: Number of days after password expires until account is disabled\n#   passwd: The hash -- not the password itself -- of the password you want\n#           to use for this user. You can generate a hash via:\n#               mkpasswd --method=SHA-512 --rounds=4096\n#           (the above command would create from stdin an SHA-512 password hash\n#           with 4096 salt rounds)\n#\n#           Please note: while the use of a hashed password is better than\n#               plain text, the use of this feature is not ideal. Also,\n#               using a high number of salting rounds will help, but it should\n#               not be relied upon.\n#\n#               To highlight this risk, running John the Ripper against the\n#               example hash above, with a readily available wordlist, revealed\n#               the true password in 12 seconds on a i7-2620QM.\n#\n#               In other words, this feature is a potential security risk and is\n#               provided for your convenience only. If you do not fully trust the\n#               medium over which your cloud-config will be transmitted, then you\n#               should not use this feature.\n#\n#   no_create_home: When set to true, do not create home directory.\n#   no_user_group: When set to true, do not create a group named after the user.\n#   no_log_init: When set to true, do not initialize lastlog and faillog database.\n#   ssh_import_id: Optional. Import SSH ids\n#   ssh_authorized_keys: Optional. [list] Add keys to user's authorized keys file\n#                        An error will be raised if no_create_home or system is\n#                        also set.\n#   ssh_redirect_user: Optional. [bool] Set true to block ssh logins for cloud\n#       ssh public keys and emit a message redirecting logins to\n#       use \u003cdefault_username\u003e instead. This option only disables cloud\n#       provided public-keys. An error will be raised if ssh_authorized_keys\n#       or ssh_import_id is provided for the same user.\n#\n#   sudo: Defaults to none. Accepts a sudo rule string, a list of sudo rule\n#         strings or False to explicitly deny sudo usage. Examples:\n#\n#         Allow a user unrestricted sudo access.\n#             sudo:  ALL=(ALL) NOPASSWD:ALL\n#                       or\n#             sudo: [\"ALL=(ALL) NOPASSWD:ALL\"]\n#\n#         Adding multiple sudo rule strings.\n#             sudo:\n#               - ALL=(ALL) NOPASSWD:/bin/mysql\n#               - ALL=(ALL) ALL\n#\n#         Prevent sudo access for a user.\n#             sudo: False\n#\n#         Note: Please double check your syntax and make sure it is valid.\n#               cloud-init does not parse/check the syntax of the sudo\n#               directive.\n#   system: Create the user as a system user. This means no home directory.\n#   snapuser: Create a Snappy (Ubuntu-Core) user via the snap create-user\n#             command available on Ubuntu systems.  If the user has an account\n#             on the Ubuntu SSO, specifying the email will allow snap to\n#             request a username and any public ssh keys and will import\n#             these into the system with username specified by SSO account.\n#             If 'username' is not set in SSO, then username will be the\n#             shortname before the email domain.\n#\n\n# Default user creation:\n#\n# Unless you define users, you will get a 'ubuntu' user on Ubuntu systems with the\n# legacy permission (no password sudo, locked user, etc). If however, you want\n# to have the 'ubuntu' user in addition to other users, you need to instruct\n# cloud-init that you also want the default user. To do this use the following\n# syntax:\n#   users:\n#     - default\n#     - bob\n#     - ....\n#  foobar: ...\n#\n# users[0] (the first user in users) overrides the user directive.\n#\n# The 'default' user above references the distro's config set in\n# /etc/cloud/cloud.cfg.\n\n# Set the hostname\nhostname: hadoop-slaves-1\n\n# Install packages\npackages:\n  - openssh-server\n\n# Config auto login\nwrite_files:\n  - path: /etc/systemd/system/getty@tty1.service.d/override.conf\n    permissions: '0644'\n    content: |\n      [Service]\n      Type=simple\n      ExecStart=\n      ExecStart=-/sbin/agetty --autologin user01 --noclear %I \\$TERM\n\n# Run commands on first boot\nruncmd:\n  - systemctl daemon-reload\n  - systemctl restart getty@tty1.service\n  - swapoff -a\n  - echo \"* - nofile 65535\" \u003e\u003e /etc/security/limits.conf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_slaves.data.template_file.network_config",
            "module.hadoop_slaves.data.template_file.user_data"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "domain-ubuntu",
      "provider": "module.hadoop_slaves.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/u01/data/virt-u01/commoninit-hadoop-slaves-0.iso;9e0c83c8-308a-48fc-a6bb-db110f84f6c7",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              },
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "1",
                "target_type": "virtio",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/u01/data/virt-u01/hadoop-clt-slave-0-disk",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [],
            "id": "2db54e28-03e3-49ff-ae5e-f9ef10a7ea2e",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "hadoop-slaves-0",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.81"
                ],
                "bridge": "",
                "hostname": "hadoop-slaves",
                "mac": "52:54:00:BA:E1:91",
                "macvtap": "",
                "network_id": "b7189a86-a35e-44d9-80e9-3dff3fb23aff",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.hadoop_slaves.data.template_file.network_config",
            "module.hadoop_slaves.data.template_file.user_data",
            "module.hadoop_slaves.libvirt_cloudinit_disk.commoninit",
            "module.hadoop_slaves.libvirt_volume.disk_volume",
            "module.hadoop_slaves.libvirt_volume.ubuntu-qcow2"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/u01/data/virt-u01/commoninit-hadoop-slaves-1.iso;cbbe0ee4-03d5-4526-b7ac-dd99bee9487e",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              },
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "1",
                "target_type": "virtio",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/u01/data/virt-u01/hadoop-clt-slave-1-disk",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [],
            "id": "6a67c395-0edb-4031-bf5d-81fa9961bdbb",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "hadoop-slaves-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.27"
                ],
                "bridge": "",
                "hostname": "hadoop-slaves",
                "mac": "52:54:00:12:DF:7A",
                "macvtap": "",
                "network_id": "b7189a86-a35e-44d9-80e9-3dff3fb23aff",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.hadoop_slaves.data.template_file.network_config",
            "module.hadoop_slaves.data.template_file.user_data",
            "module.hadoop_slaves.libvirt_cloudinit_disk.commoninit",
            "module.hadoop_slaves.libvirt_volume.disk_volume",
            "module.hadoop_slaves.libvirt_volume.ubuntu-qcow2"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "disk_volume",
      "provider": "module.hadoop_slaves.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/u01/data/virt-u01/hadoop-clt-slave-base",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/u01/data/virt-u01/hadoop-clt-slave-0-disk",
            "name": "hadoop-clt-slave-0-disk",
            "pool": "virt-u01",
            "size": 53687091200,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_slaves.libvirt_volume.ubuntu-qcow2"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/u01/data/virt-u01/hadoop-clt-slave-base",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/u01/data/virt-u01/hadoop-clt-slave-1-disk",
            "name": "hadoop-clt-slave-1-disk",
            "pool": "virt-u01",
            "size": 53687091200,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.hadoop_slaves.libvirt_volume.ubuntu-qcow2"
          ]
        }
      ]
    },
    {
      "module": "module.hadoop_slaves",
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "ubuntu-qcow2",
      "provider": "module.hadoop_slaves.provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/u01/data/virt-u01/hadoop-clt-slave-base",
            "name": "hadoop-clt-slave-base",
            "pool": "virt-u01",
            "size": 2361393152,
            "source": "/u01/os_images/jammy-server-cloudimg-amd64.img",
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_master.var.vm_vcpu",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_master.var.vm_vcpu",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.vm_vcpu",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.vm_vcpu",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_master.var.vm_disk_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_master.var.vm_disk_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_slaves.var.number_of_vms",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_slaves.var.number_of_vms",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_slaves.var.vm_vcpu",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_slaves.var.vm_vcpu",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.vm_disk_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.vm_disk_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_master.var.vm_memory",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_master.var.vm_memory",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_slaves.var.vm_disk_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_slaves.var.vm_disk_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.vm_memory",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.vm_memory",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_master.var.number_of_vms",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_master.var.number_of_vms",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.hadoop_slaves.var.vm_memory",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.hadoop_slaves.var.vm_memory",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.number_of_vms",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.number_of_vms",
          "status": "pass"
        }
      ]
    }
  ]
}
